# name: Tests

# on:
#   push:
#     paths:
#       - src/fantasyfootball/data.py
#       - src/fantasyfootball/features.py
#       - src/fantasyfootball/benchmarking.py
#       - tests/**
#       - pipeline/**
#       - .github/workflows/**

# jobs:
#   unit-tests:
#     name: Fantasy Football Formatting & Unit Tests
#     runs-on: ubuntu-latest
#     strategy:
#       fail-fast: false
#       matrix:
#         python-version: [3.8, 3.9]
#     steps:
#     - uses: actions/checkout@v3
#     - name: Set up Python ${{ matrix.python-version }}
#       uses: actions/setup-python@v3
#       with:
#         python-version: ${{ matrix.python-version }}
#   # Ensure code formatting adheres to existing guidelines
#   # - name: Run Pre-commit hooks
#   # uses: pre-commit/action@v3.0.0

#     # Install dependencies 
#     - name: Install Poetry
#       uses: snok/install-poetry@v1
#       with:
#         virtualenvs-create: true
#         virtualenvs-in-project: true
#         installer-parallel: true
#     # if an environment already exists, load it; otherwise create a new one 
#     - name: Load Cached Virtual Environment
#       id: cached-poetry-dependencies
#       uses: actions/cache@v2
#       with:
#         path: .venv
#         key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
#     - name: Install dependencies
#       if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
#     # if no cache exists, install packages 
#       run: poetry install --no-interaction --no-root
#     # run unit tests
#     - name: Run unit tests
#       run: |
#         source .venv/bin/activate
#         poetry install
#         pytest --cov=./ --cov-report=xml tests/
#     - name: Upload Coverage report
#       uses: codecov/codecov-action@v2
#       with:
#         token: ${{ secrets.CODECOV_TOKEN }}
#         files: ./coverage.xml
    


